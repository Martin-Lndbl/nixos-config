(defwidget barmenu_layout []
  (box :class "layout-box" 
    (box 
      :orientation "h"
      (left)
      (middle)
      (right)
    )
  )
)

(defwidget left []
  (box
    :space-evenly false
    :halign "start"
    :orientation "h"
    (_dashboard)
    (_workspaces)
  )
)

(defwidget middle []
  (box
    :space-evenly false
    :halign "center"
    (_time)
  )
)

(defwidget right []
  (box
    :space-evenly false
    :halign "end"
    (_network)
    (_audio)
    (_bright)
    (_battery :status {EWW_BATTERY.BAT0.status}
      :battery {EWW_BATTERY.BAT0.capacity}
      :hover {battery_hover}
      :charge "" :full "" :three "" :half "" :quater "" :empty ""
    )
  )
)

(defwidget _dashboard []
  (box
    (button
      (label
        :class "home-sym"
        :text ""
      )
    )
  )
)

(defwidget _workspaces []
  (box
    :class "ws-box"
    (__workspace :nr 1 :exists ws_1)
    (__workspace :nr 2 :exists ws_2)
    (__workspace :nr 3 :exists ws_3)
    (__workspace :nr 4 :exists ws_4)
    (__workspace :nr 5 :exists ws_5)
    (__workspace :nr 6 :exists ws_6)
    (__workspace :nr 7 :exists ws_7)
    (__workspace :nr 8 :exists ws_8)
    (__workspace :nr 9 :exists ws_9)
  )
)

(defwidget __workspace [ nr exists ]
  (button :class "workspace 
                  ${ws_active == nr ? "ws_active" : ""} 
                  ${exists == 'true' ? "ws_exists" : ""}"
    :onclick "hyprctl dispatch workspace ${nr} && scripts/workspaces ${nr}"
    (label 
      :class "ws-lbl"
      :text nr
    )
  )
)

(defwidget _time []
  (eventbox
    :onhover "${EWW_CMD} update time_hover=true"
    :onhoverlost "${EWW_CMD} update time_hover=false"
    (box
      :space-evenly false
      (revealer 
        :transition "slideleft" 
			  :reveal time_hover
			  :duration "550ms"
        (label
          :class "time"
          :text "${time.weekday}, ${time.day}.${time.month}.${time.year} - "
        )
      )
      (label
        :class "time"
        :text "${time.hour}:${time.min}"
      )
	    (revealer 
        :transition "slideright" 
			  :reveal time_hover
			  :duration "550ms"
        (label
          :class "time"
          :text ":${time.sec}"
        )
      )
    )
  )
)


(defwidget _network []
  (eventbox
    :onhover "scripts/network"
    (box :class "network-box" (label
      :class "network-sym"
      :space-evenly "false"
      :text { "" }
      :tooltip network_connection
    ))
  )
)

(defwidget _audio []
  (eventbox 
    :onhover "${EWW_CMD} update audio_hover=true"   
  	:onhoverlost "${EWW_CMD} update audio_hover=false"
  	(box
      :class "audio-box"
			:space-evenly "false"
      (button
        :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && ${EWW_CMD} update volume_muted=${volume_muted == "" ? "true" : ""}"
			  (label 
          :class {volume_muted == "" ? "audio-sym":"muted-sym"}
          :text {volume_muted != "" || current-volume == 0 ? "" 
            :current-volume < 50 ? "" : ""}
        )
      )
  		(revealer :transition "slideright" 
			  :reveal audio_hover
			  :duration "550ms"
  			(scale 
          :class "audio_slide" 
			    :value current-volume 
				  :tooltip "Volume: ${current-volume}"
				  :onchange "wpctl set-volume -l 1.2 @DEFAULT_AUDIO_SINK@ {}%" 
				  :max 101 
				  :min 0
        )
      )
  	)
  )
)

(defwidget _bright []
  (eventbox 
    :onhover "${EWW_CMD} update bright_hover=true"   
  	:onhoverlost "${EWW_CMD} update bright_hover=false"
  	(box
      :class "bright-box"
			:space-evenly "false"
			(label
        :class "bright-sym"
        :text ""
      )
  		(revealer :transition "slideright" 
			  :reveal bright_hover
			  :duration "550ms"
  			(scale 
          :class "bright_slide" 
			    :value BLIGHT
				  :tooltip "Brightness: ${BLIGHT}%"
				  :onchange "brightnessctl set {}%"
				  :max 101
				  :min 2
        )
      )
  	)
  )
)

(defwidget _battery [battery status hover empty quater half three full charge]
  (eventbox :class "bat-box" 
    :onhover "${EWW_CMD} update battery_hover=true; ./scripts/battery"
    :onhoverlost "${EWW_CMD} update battery_hover=false"
    (box :class "bat-box" (label 
        :class {
          hover == 'true' ? "bat-txt" : "bat-sym"
        }
        :text {
          hover == 'true' ? "${battery}%"
          :status == 'Charging' ? charge
          :battery < 20 ? empty
          :battery < 40 ? quater
          :battery < 60 ? half
          :battery < 80 ? three
          :full 
        }
        :tooltip battery_timeleft
      ))
  )
)

(defwindow bar
  :exclusive true
  :monitor 0
  :windowtype "dock"
	:focusable false
  :stacking "fg"
  :geometry (geometry :x "0%"
                      :y "0.5%"
                      :width "99.5%"
                      :height "2%"
                      :anchor "bottom center")
  (barmenu_layout)
)
